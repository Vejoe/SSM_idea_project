<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 自动扫描指定目录，将控制器加载到bean -->
    <context:component-scan base-package="com.demo" />

    <!-- 第一种方式：加载一个properties文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc.properties"/>
    </bean>

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName" value="${driverClassName}"/>-->
        <!--<property name="url" value="${url}"/>-->
        <!--<property name="username" value="${username}"/>-->
        <!--<property name="password" value="${password}"/>-->
    <!--</bean>-->

    <!--配置数据源-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <!--&lt;!&ndash;初始化连接大小&ndash;&gt;-->
        <!--<property name="initialSize" value="${jdbc.initialSize}"/>-->
        <!--&lt;!&ndash;连接池最大数量&ndash;&gt;-->
        <!--<property name="maxActive" value="${jdbc.maxActive}"/>-->
        <!--&lt;!&ndash;连接池最大空闲&ndash;&gt;-->
        <!--<property name="maxIdle" value="${jdbc.maxIdle}"/>-->
        <!--&lt;!&ndash;连接池最小空闲&ndash;&gt;-->
        <!--<property name="minIdle" value="${jdbc.minIdle}"/>-->
        <!--获取连接最大等待时间-->
        <property name="maxWait" value="${jdbc.maxWait}"/>
    </bean>



    <!--配置 sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"></property>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!--实体类包所在的位置-->
        <property name="typeAliasesPackage" value="com.demo.entity" />
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 ,自动扫描了所有的XxxxMapper.xml对应的mapper接口文件,只要Mapper接口类和Mapper映射文件对应起来就可以了-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.demo.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- 配置事物管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource" />
    </bean>

    <!-- 配置事物传播行为 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>


</beans>